This project contains a library of helper functions to assist in writing testbenches in VHDL.

It is licensed under the Creative Common Zero license - no rights reserved:

"To the extent possible under law,
  Joren Guillaume
has waived all copyright
and related or neighbouring
rights to the VHDL project.
This work is published from: 
  Belgium"
  
  This means:

* You can use it for any purpose.  
* No warranty of any kind is given or implied.


The project uses some excerpts from the code located at the following websites:
http://opencores.org/project,avs_aes

kik.weii.tu.koszalin.pl/vhdlunit/
The project above states an "Open Source" format, but neglects to include a license.
Therefore all code used from this source is clearly marked should you choose to ignore it.

----------------------------------------------------------------------------------------

Much of the code is incomplete or undergoes constant change, a final product is not yet in sight.
Running the code may require additional installs such as:
https://github.com/kyrus/python-junit-xml
which in turn requires
https://pypi.python.org/pypi/setuptools
or a derivative to install.

Commands to declare and compile libraries for the AES test project are not included
but can be extracted from the makefile included in the AES folder, or you can run the makefile.

----------------------------------------------------------------------------------------

The method user by the author is:

1.		Install Java (optional)
2.		Install Python
3.		Install modelsim (Author uses PE student edition)
3.1		Add python and modelsim to the Path (Windows)
4.		Install Hudson-CI (optional)
5.		Install setuptools (using the "python ez_setup.py" command/file provided by setuptools)
6.		Install python-junit-xml (using the "python setup.py install" command/file provided by python-junit-xml)
7.		Download a copy of testbench_parser.py
8.		Run "python testbench_parser.py" (Or have the hudson-CI run it)

Results should be viewable by any junit-xml viewer (such as Eclipse or Hudson-CI)
Help with running the testbench_parser.py can be obtained by running "python testbench_parser.py -h"